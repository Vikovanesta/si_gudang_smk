## Autogenerated by Scribe. DO NOT MODIFY.

name: Warehouse
description: |-

  APIs for managing warehouses
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/warehouses
    metadata:
      groupName: Warehouse
      groupDescription: |-

        APIs for managing warehouses
      subgroup: ''
      subgroupDescription: ''
      title: 'Get warehouses'
      description: 'Get a list of warehouses'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      name:
        name: name
        description: 'The name of the warehouse.'
        required: false
        example: warehouse
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      item_id:
        name: item_id
        description: 'The id of the item.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page:
        name: page
        description: 'The page number.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page_size:
        name: page_size
        description: 'The number of warehouses to display per page.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort_by:
        name: sort_by
        description: 'The column to sort by.'
        required: false
        example: name
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort_direction:
        name: sort_direction
        description: 'The direction to sort.'
        required: false
        example: asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      name: warehouse
      item_id: 2
      page: 1
      page_size: 15
      sort_by: name
      sort_direction: asc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vdg14a6E3Zb5DPkcfvh68ea'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/warehouses
    metadata:
      groupName: Warehouse
      groupDescription: |-

        APIs for managing warehouses
      subgroup: Management
      subgroupDescription: ''
      title: 'Add Warehouse'
      description: 'Add a new warehouse'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the warehouse.'
        required: true
        example: warehouse
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: warehouse
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v3h8VDZ6fcaPke45E1bdag6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/warehouses/{warehouse_id}'
    metadata:
      groupName: Warehouse
      groupDescription: |-

        APIs for managing warehouses
      subgroup: Management
      subgroupDescription: ''
      title: 'Uodate Warehouse'
      description: 'Update a warehouse'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      warehouse_id:
        name: warehouse_id
        description: 'The ID of the warehouse.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      warehouse:
        name: warehouse
        description: 'The ID of the warehouse.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      warehouse_id: 1
      warehouse: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the warehouse.'
        required: true
        example: warehouse
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: warehouse
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DPa563fV1ZhvaEegd48k6bc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/warehouses/{warehouse_id}'
    metadata:
      groupName: Warehouse
      groupDescription: |-

        APIs for managing warehouses
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Warehouse'
      description: 'Delete a warehouse'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      warehouse_id:
        name: warehouse_id
        description: 'The ID of the warehouse.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      warehouse:
        name: warehouse
        description: 'The ID of the warehouse.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      warehouse_id: 1
      warehouse: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 66EkaZcv3bdDVPhg1f4ae85'
    controller: null
    method: null
    route: null
    custom: []
