name: Item
description: |-

  APIs for managing items
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/items
    metadata:
      groupName: Item
      groupDescription: |-

        APIs for managing items
      subgroup: ''
      subgroupDescription: ''
      title: 'Get items'
      description: 'Get a list of items'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page_size:
        name: page_size
        description: 'The number of items to display per page.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page:
        name: page
        description: 'The page number.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      warehouse_id:
        name: warehouse_id
        description: 'The id of the warehouse.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      material_id:
        name: material_id
        description: 'The id of the material.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      name:
        name: name
        description: 'The name of the item.'
        required: false
        example: item
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page_size: 15
      page: 1
      warehouse_id: 1
      material_id: 1
      name: item
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fP51k6Edav6gebaVh4Zc83D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/items
    metadata:
      groupName: Item
      groupDescription: |-

        APIs for managing items
      subgroup: Management
      subgroupDescription: ''
      title: 'Add item'
      description: 'Add a new item'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      warehouse_id:
        name: warehouse_id
        description: 'The id of the warehouse.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      material_id:
        name: material_id
        description: 'The id of the material.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      name:
        name: name
        description: 'The name of the item.'
        required: true
        example: item
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      max_stock:
        name: max_stock
        description: 'The maximum stock of the item.'
        required: true
        example: 50
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image:
        name: image
        description: 'The image of the item.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      warehouse_id: 1
      material_id: 1
      name: item
      max_stock: 50
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8cEv5b16h46eaVZDkdgafP3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/items/{item_id}'
    metadata:
      groupName: Item
      groupDescription: |-

        APIs for managing items
      subgroup: Management
      subgroupDescription: ''
      title: 'Update item'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      item_id:
        name: item_id
        description: 'The ID of the item.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      item_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      warehouse_id:
        name: warehouse_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      material_id:
        name: material_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: animi
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ckVfPveaE318Zbh6a4g65dD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/items/{item_id}'
    metadata:
      groupName: Item
      groupDescription: |-

        APIs for managing items
      subgroup: Management
      subgroupDescription: ''
      title: 'Delete item'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      item_id:
        name: item_id
        description: 'The ID of the item.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      item:
        name: item
        description: 'The id of the item.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      item_id: 1
      item: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5aP6cZ4v6e81hdEfk3DgaVb'
    controller: null
    method: null
    route: null
    custom: []
