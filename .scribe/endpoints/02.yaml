name: Teacher
description: |-

  APIs for managing teachers
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/teachers
    metadata:
      groupName: Teacher
      groupDescription: |-

        APIs for managing teachers
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teachers'
      description: 'Get a list of teachers'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      name:
        name: name
        description: 'The name of the teacher.'
        required: false
        example: teacher
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      nip:
        name: nip
        description: 'The nip of the teacher.'
        required: false
        example: '123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      subject_id:
        name: subject_id
        description: 'The id of the subject.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page:
        name: page
        description: 'The page number.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page_size:
        name: page_size
        description: 'The number of teachers to display per page.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort_by:
        name: sort_by
        description: 'The column to sort by.'
        required: false
        example: name
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort_direction:
        name: sort_direction
        description: 'The direction to sort.'
        required: false
        example: asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      name: teacher
      nip: '123456789'
      subject_id: 1
      page: 1
      page_size: 15
      sort_by: name
      sort_direction: asc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 16b8a6VdaEk5v3ceDgPf4hZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/teachers
    metadata:
      groupName: Teacher
      groupDescription: |-

        APIs for managing teachers
      subgroup: Management
      subgroupDescription: ''
      title: 'Create a new teacher'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the teacher.'
        required: true
        example: teacher
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email of the teacher.'
        required: true
        example: teacher@mail.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password of the teacher.'
        required: true
        example: teacher
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: 'The phone of the teacher.'
        required: true
        example: '081234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      nip:
        name: nip
        description: 'The nip of the teacher.'
        required: true
        example: '123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      profile_image:
        name: profile_image
        description: 'The profile image of the teacher.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: teacher
      email: teacher@mail.com
      password: teacher
      phone: '081234567890'
      nip: '123456789'
    fileParameters:
      profile_image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DbVac1e6vEZhPkda453g86f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/teachers/{teacher_id}'
    metadata:
      groupName: Teacher
      groupDescription: |-

        APIs for managing teachers
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher details'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher_id:
        name: teacher_id
        description: 'The ID of the teacher.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      teacher:
        name: teacher
        description: 'The ID of the teacher.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      teacher_id: 1
      teacher: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6c65Deav1aZdfPEk34Vghb8'
    controller: null
    method: null
    route: null
    custom: []
